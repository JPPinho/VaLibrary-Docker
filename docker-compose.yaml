services:
  backend:
    build:
      context: ../VaLibrary-Client
      dockerfile: ../VaLibrary-Docker/.docker/php/Dockerfile
      args:
        - UID=1000
        - GID=1000
    container_name: valibrary-app
    restart: unless-stopped
    working_dir: /var/www/html
    user: "1000:1000"
    volumes:
      - ../VaLibrary-Client/:/var/www/html
    networks:
      - valibrary-network

  nginx:
    build:
      context: .
      dockerfile: ../VaLibrary-Docker/.docker/nginx/Dockerfile
    container_name: valibrary-web
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../VaLibrary-Client/:/var/www/html
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
      - ./.docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - backend
    networks:
      - valibrary-network

  mysql:
    image: mysql:8.0
    container_name: valibrary-db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: valibrary
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - valibrary-network

  vite:
    build:
      context: ../VaLibrary-Client
      dockerfile: ../VaLibrary-Docker/.docker/php/Dockerfile
    container_name: valibrary-vite
    restart: unless-stopped
    working_dir: /var/www/html
    #env_file:
    #  - ../VaLibrary-Client/.env
    environment:
      - APP_URL=${APP_URL}
    user: "1000:1000"
    ports:
      - "5173:5173"
    volumes:
      - ../VaLibrary-Client/:/var/www/html
      - ./scripts/vite-entrypoint.sh:/usr/local/bin/vite-entrypoint.sh
      - ./.docker/nginx/certs:/etc/nginx/certs
      #- /var/www/html/node_modules
    command: npm run dev -- --host
    #command: tail -f /dev/null
    networks:
      - valibrary-network
  mqtt:
    image: eclipse-mosquitto:2
    container_name: valibrary-mqtt
    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ../VaLibrary-MQTT/mosquitto/config:/mosquitto/config
      - ../VaLibrary-MQTT/mosquitto/data:/mosquitto/data
      - ../VaLibrary-MQTT/mosquitto/log:/mosquitto/log
    networks:
      - valibrary-network


networks:
  valibrary-network:
    driver: bridge

volumes:
  dbdata:
    driver: local